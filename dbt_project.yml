
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'sakila_dbt'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'sakila_dbt'
vars:
    init_date: '1900-01-01'  # This variable can be used in your models to set a default date

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models
on-run-start: 
  - create schema if not exists sakila_dwh;
  - create table if not exists sakila_dwh.log_table (id varchar(50), start_at timestamptz, end_at timestamp);
  - insert into sakila_dwh.log_table (id, start_at) values ('{{invocation_id}}', now());

on-run-end: 
  - update sakila_dwh.log_table set end_at = now() where id = '{{invocation_id}}';  

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  sakila_dbt:
    # Config indicated by + and applies to all files under models/example/
    example:
      +materialized: view
      +schema: example
      +enabled: false
    dim: 
      +materialized: incremental
      +schema: dim
      +pre_hook: "{{delete_from(this)}}"
        
    fact: 
      +materialized: incremental
      +schema: fact

seeds:
  +schema: seeds